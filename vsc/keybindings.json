// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+o",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+t",
        "command": "macros.emacsCtrlO",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c s",
        "command": "editor.action.showSnippets",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+g alt+g",
        "command": "workbench.action.gotoLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x f",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.files.openFileFolder"
    },
    {
        "key": "shift+cmd+.",
        "command": "editor.action.addSelectionToNextFindMatch"
    },
    {
        "key": "shift+cmd+,",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+c ctrl+c",
        "command": "git.commit"
    },
    {
        "key": "ctrl+c ctrl+s",
        "command": "git.stageSelectedRanges"
    },
    {
        "key": "ctrl+c t",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "cmd+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+x s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "alt+cmd+s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "shift+alt+,",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && gitlens:activeIsTracked && gitlens:keymap == 'standard'"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && gitlens:activeIsBlameable && gitlens:keymap == 'standard'"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+enter",
        "command": "metaGo.goto",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+;",
        "command": "-metaGo.goto",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+enter",
        "command": "metaGo.selection",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+;",
        "command": "-metaGo.selection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "editor.action.marker.next",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+p",
        "command": "editor.action.marker.prev",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c d",
        "command": "editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+c p",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+/",
        "command": "-gitlens.showCommitSearch",
        "when": "gitlens:enabled && gitlens:keymap == 'standard'"
    },
]